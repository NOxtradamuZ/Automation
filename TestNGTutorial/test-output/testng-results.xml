<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="4" total="10" passed="5" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2023-02-01T17:16:15Z" name="Loan Department" finished-at="2023-02-01T17:16:15Z" duration-ms="48">
    <groups>
      <group name="Smoke">
        <method signature="Basics.demo(java.lang.String, java.lang.String)[pri:0, instance:tests.Basics@795509d9]" name="demo" class="tests.Basics"/>
      </group> <!-- Smoke -->
    </groups>
    <test started-at="2023-02-01T17:16:15Z" name="Car loan" finished-at="2023-02-01T17:16:15Z" duration-ms="48">
      <class name="tests.LoginApp">
        <test-method is-config="true" signature="beforeSuite()[pri:0, instance:tests.LoginApp@7e057f43]" started-at="2023-02-01T17:16:15Z" name="beforeSuite" finished-at="2023-02-01T17:16:15Z" duration-ms="12" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuite -->
        <test-method signature="apiLoginCarLoan()[pri:0, instance:tests.LoginApp@7e057f43]" started-at="2023-02-01T17:16:15Z" name="apiLoginCarLoan" finished-at="2023-02-01T17:16:15Z" duration-ms="10" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- apiLoginCarLoan -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:tests.LoginApp@7e057f43]" started-at="2023-02-01T17:16:15Z" name="beforeMethod" finished-at="2023-02-01T17:16:15Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:tests.LoginApp@7e057f43]" started-at="2023-02-01T17:16:15Z" name="afterMethod" finished-at="2023-02-01T17:16:15Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:tests.LoginApp@7e057f43]" started-at="2023-02-01T17:16:15Z" name="beforeMethod" finished-at="2023-02-01T17:16:15Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="validationData(java.lang.String, java.lang.String)[pri:0, instance:tests.LoginApp@7e057f43]" started-at="2023-02-01T17:16:15Z" name="validationData" data-provider="getData" finished-at="2023-02-01T17:16:15Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[firstusername]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[password]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validationData -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:tests.LoginApp@7e057f43]" started-at="2023-02-01T17:16:15Z" name="afterMethod" finished-at="2023-02-01T17:16:15Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="validationData(java.lang.String, java.lang.String)[pri:0, instance:tests.LoginApp@7e057f43]" started-at="2023-02-01T17:16:15Z" name="validationData" data-provider="getData" finished-at="2023-02-01T17:16:15Z" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[secondusername]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[secondpassword]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validationData -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:tests.LoginApp@7e057f43]" started-at="2023-02-01T17:16:15Z" name="beforeMethod" finished-at="2023-02-01T17:16:15Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:tests.LoginApp@7e057f43]" started-at="2023-02-01T17:16:15Z" name="afterMethod" finished-at="2023-02-01T17:16:15Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:tests.LoginApp@7e057f43]" started-at="2023-02-01T17:16:15Z" name="beforeMethod" finished-at="2023-02-01T17:16:15Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="validationData(java.lang.String, java.lang.String)[pri:0, instance:tests.LoginApp@7e057f43]" started-at="2023-02-01T17:16:15Z" name="validationData" data-provider="getData" finished-at="2023-02-01T17:16:15Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[thirdusername]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[thirdpassword]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validationData -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:tests.LoginApp@7e057f43]" started-at="2023-02-01T17:16:15Z" name="afterMethod" finished-at="2023-02-01T17:16:15Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:tests.LoginApp@7e057f43]" started-at="2023-02-01T17:16:15Z" name="beforeMethod" finished-at="2023-02-01T17:16:15Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="webLoginCarLoan(java.lang.String)[pri:0, instance:tests.LoginApp@7e057f43]" started-at="2023-02-01T17:16:15Z" name="webLoginCarLoan" finished-at="2023-02-01T17:16:15Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[loancar.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- webLoginCarLoan -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:tests.LoginApp@7e057f43]" started-at="2023-02-01T17:16:15Z" name="afterMethod" finished-at="2023-02-01T17:16:15Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- tests.LoginApp -->
      <class name="tests.Basics">
        <test-method is-config="true" signature="afterSuite()[pri:0, instance:tests.Basics@795509d9]" started-at="2023-02-01T17:16:16Z" name="afterSuite" finished-at="2023-02-01T17:16:16Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
      </class> <!-- tests.Basics -->
    </test> <!-- Car loan -->
    <test started-at="2023-02-01T17:16:15Z" name="Personal loan" finished-at="2023-02-01T17:16:15Z" duration-ms="33">
      <class name="tests.Basics">
        <test-method is-config="true" signature="prerequisite()[pri:0, instance:tests.Basics@795509d9]" started-at="2023-02-01T17:16:15Z" name="prerequisite" finished-at="2023-02-01T17:16:15Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- prerequisite -->
        <test-method is-config="true" signature="beforeClass()[pri:0, instance:tests.Basics@795509d9]" started-at="2023-02-01T17:16:15Z" name="beforeClass" finished-at="2023-02-01T17:16:15Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method signature="demo(java.lang.String, java.lang.String)[pri:0, instance:tests.Basics@795509d9]" started-at="2023-02-01T17:16:15Z" name="demo" finished-at="2023-02-01T17:16:15Z" duration-ms="9" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[qaclickacademy.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[123456]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertTrue(Assert.java:44)
at org.testng.Assert.assertTrue(Assert.java:54)
at tests.Basics.demo(Basics.java:30)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:40)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:489)
at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- demo -->
        <test-method is-config="true" signature="afterClass()[pri:0, instance:tests.Basics@795509d9]" started-at="2023-02-01T17:16:15Z" name="afterClass" finished-at="2023-02-01T17:16:15Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method is-config="true" signature="lastExecution()[pri:0, instance:tests.Basics@795509d9]" started-at="2023-02-01T17:16:15Z" name="lastExecution" finished-at="2023-02-01T17:16:15Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- lastExecution -->
      </class> <!-- tests.Basics -->
    </test> <!-- Personal loan -->
  </suite> <!-- Loan Department -->
</testng-results>
